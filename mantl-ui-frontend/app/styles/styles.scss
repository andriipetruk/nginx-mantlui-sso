@import 'mixins.scss';
@import 'vendor/bootstrap/mixins/buttons.scss';
@import 'vendor/bootstrap/mixins/grid.scss';
@import 'vendor/bootstrap/mixins/hover.scss';
@import 'vendor/bootstrap/variables.scss';

/* general */
body {
    background-image: url(../images/bg.jpg);
    @include image-2x-plain("../images/bg@2x.jpg");
    background-repeat: no-repeat;
    background-size: 100% auto;
    background-position: top center;
    background-attachment: fixed;
}
.controls {
    text-align: right;
    margin-bottom: 1rem;
}
.container.content {
    padding-top: 1rem;
    padding-bottom: 5px;
    background-color: rgba(253, 235, 202, 0.5);
    min-height: 100%;
    border-radius: 0 0 1rem 1rem;
}
.hidden {
    display: none;
}

/* header */
.navbar {
    background-color: $gray-dark;
    border-radius: 0;

    .nav-item.active a {
        color: $gray-lightest;
    }
    .nav-item a {
        color: $gray-lightest * 0.8;
    }

    p.nav-item, {
        padding: $nav-link-padding;
        margin: 0
    }

    .health {
        color: $gray;

        &.passing {
            color: $brand-success;
        }

        &.warning {
            color: $brand-warning;
        }

        &.critical {
            color: $brand-danger;
        }
    }

    &.navbar-attention {
        background-color: $brand-primary;
        text-align: center;
        color: $gray-lightest;
    }
}
.card {
    background-color: $gray-lightest;
}

/* services */
.service {
    h4 {
        text-align: center;
    }
}

/* logos */
@mixin logo($name, $width, $height, $imgname) {
    .#{$name} {
        width: $width;
        height: $height;
        background: url("../images/logos/#{$imgname}.png") no-repeat;
        @include image-2x("../images/logos/#{$imgname}@2x.png", $width, $height);
    }
}

@mixin unknown($name, $size) {
    .#{$name} {
        width: $size;
        height: $size;
        background-color: $gray-light;
        border-radius: $size;

        &:before {
            content: "#{$name}";
            text-transform: uppercase;
            line-height: $size;
            color: $gray-lightest;
            font-weight: bold;
        }
    }
}

.service .logo {
    width: 100%;
    text-align: center;
    min-height: 180px;
    margin-bottom: 15px;

    * {
        margin: 0 auto;
    }

    @include logo(mesos, 153px, 180px, mesos);
    @include logo(consul, 178px, 180px, consul);
    @include logo(marathon, 180px, 180px, marathon);
    @include logo(chronos, 180px, 180px, chronos);
    @include logo(traefik, 180px, 180px, traefik);
    @include logo(kubernetes, 180px, 180px, kubernetes);
    @include logo(elasticsearch, 180px, 180px, elasticsearch);
    @include logo(elasticsearch-mantl, 180px, 180px, elasticsearch);
    @include logo(kibana, 180px, 180px, kibana);
    @include logo(kibana-mantl, 180px, 180px, kibana);
    @include logo(kibana-mantl-task, 180px, 180px, kibana);
}

/* version */
.version {
    position: fixed;
    right: 0;
    bottom: 0;
    font-size: 0.6em;
    background-color: $gray-lightest;
    padding: 2px;
    border-radius: 5px 0 0 0;
}

/* health checks */
.healthdot {
    // hide inner text
    display: inline-block;
    overflow: hidden;
    text-indent: 100%;

    // make a dot
    &.small {
        width: 10px;
        height: 10px;
        border-radius: 10px;

        margin: 1px 5px 1px 1px;
    }

    &.large {
        width: 15px;
        height: 15px;
        border-radius: 15px;

        margin: 2px 10px 2px 2px;
    }

    // colors
    box-shadow: 0 0 2px $gray;
    background-color: $gray;

    &.passing {
        box-shadow: 0 0 2px $brand-success;
        background-color: $brand-success;
    }

    &.warning {
        box-shadow: 0 0 2px $brand-warning;
        background-color: $brand-warning;
    }

    &.critical {
        box-shadow: 0 0 2px $brand-danger;
        background-color: $brand-danger;
    }
}

.healthchecks {
    .service, .check {
        border-color: $gray;
        border-left-width: .5rem;

        &.passing { border-color: $brand-success; }
        &.warning { border-color: $brand-warning; }
        &.critical { border-color: $brand-danger; }
    }

    .service {
        display: block;

        &.passing { color: $brand-success; }
        &.warning { color: $brand-warning; }
        &.critical { color: $brand-danger; }

        &.active {
            border-color: $gray * 1.2;

            text-decoration: none;

            &.passing { border-color: $brand-success * 1.2; }
            &.warning { border-color: $brand-warning * 1.2; }
            &.critical { border-color: $brand-danger * 1.2; }
        }
    }

    .check {
        .attributes {
            @include make-row();
            margin-bottom: 0;

            .attribute {
                @include make-col();
                @include make-col-span(2, 10);
                text-align: center;
            }
        }

        .output {
            background-color: $gray;
            color: $gray-lightest;
            border-radius: 5px;
            padding: 15px;
        }
    }
}

.btn-health {
    &.passing {
        @include button-outline-variant($brand-success);
    }

    &.warning {
        @include button-outline-variant($brand-warning);
    }

    &.critical {
        @include button-outline-variant($brand-danger);
    }
}