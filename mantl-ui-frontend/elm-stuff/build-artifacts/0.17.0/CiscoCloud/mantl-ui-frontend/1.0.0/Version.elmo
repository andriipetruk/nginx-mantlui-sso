var _CiscoCloud$mantl_ui_frontend$Version$version = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$class('version')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html$text(
				A2(_elm_lang$core$Maybe$withDefault, 'No Version', model.current))
			]));
};
var _CiscoCloud$mantl_ui_frontend$Version$view = _CiscoCloud$mantl_ui_frontend$Version$version;
var _CiscoCloud$mantl_ui_frontend$Version$notification = function (model) {
	return model.hasUpdate ? A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_CiscoCloud$mantl_ui_frontend$Attributes$classes(
				_elm_lang$core$Native_List.fromArray(
					['navbar', 'navbar-attention']))
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('container')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$p,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('nav-item')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text('New version available. Please reload!')
							]))
					]))
			])) : A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[]));
};
var _CiscoCloud$mantl_ui_frontend$Version$update = F2(
	function (action, model) {
		var _p0 = action;
		if (_p0._0.ctor === 'Nothing') {
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				model,
				_elm_lang$core$Native_List.fromArray(
					[]));
		} else {
			var _p2 = _p0._0._0;
			var _p1 = model.current;
			if (_p1.ctor === 'Nothing') {
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{
							current: _elm_lang$core$Maybe$Just(_p2)
						}),
					_elm_lang$core$Native_List.fromArray(
						[]));
			} else {
				return _elm_lang$core$Native_Utils.eq(_p1._0, _p2) ? A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					model,
					_elm_lang$core$Native_List.fromArray(
						[])) : A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{
							current: _elm_lang$core$Maybe$Just(_p2),
							hasUpdate: true
						}),
					_elm_lang$core$Native_List.fromArray(
						[]));
			}
		}
	});
var _CiscoCloud$mantl_ui_frontend$Version$Model = F2(
	function (a, b) {
		return {current: a, hasUpdate: b};
	});
var _CiscoCloud$mantl_ui_frontend$Version$NewVersion = function (a) {
	return {ctor: 'NewVersion', _0: a};
};
var _CiscoCloud$mantl_ui_frontend$Version$loadVersion = A2(
	_NoRedInk$elm_task_extra$Task_Extra$performFailproof,
	_CiscoCloud$mantl_ui_frontend$Version$NewVersion,
	_elm_lang$core$Task$toMaybe(
		_evancz$elm_http$Http$getString('signature')));
var _CiscoCloud$mantl_ui_frontend$Version$init = {
	ctor: '_Tuple2',
	_0: {current: _elm_lang$core$Maybe$Nothing, hasUpdate: false},
	_1: _CiscoCloud$mantl_ui_frontend$Version$loadVersion
};
